#!/usr/bin/env python3
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ MySQL
ort sqlite3
import pymysql
import os
from datetime import datetime

def migrate_sqlite_to_mysql():
    "–∏–≥—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ SQLite –≤ MySQL"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SQLite —Ñ–∞–π–ª–∞
    sqlite_db = arbitrage_reports.db'
    if not os.path.exists(sqlite_db):
        print(f‚ùå –§–∞–π–ª {sqlite_db} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –î–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏)
    mysql_config =[object Object]
        host': 'localhost,
    user':your_username',
       password':your_password',
   database': accounting_system',
        charset': 'utf8mb4'
    }
    
    print("üîç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite
        sqlite_conn = sqlite3.connect(sqlite_db)
        sqlite_cursor = sqlite_conn.cursor()
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL
        mysql_conn = pymysql.connect(**mysql_config)
        mysql_cursor = mysql_conn.cursor()
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
        tables = [
      employee',
      account', 
          shift_report',
          order_detail',
          initial_balance',
          account_balance_history',
   order',
        employee_scam_history',
            salary_settings'
        ]
        
        for table in tables:
            try:
                print(f"\nüìä –ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã: {table}")
                
                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ SQLite
                sqlite_cursor.execute(f"SELECT * FROM {table})              rows = sqlite_cursor.fetchall()
                
                if not rows:
                    print(f"   ‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ {table} –ø—É—Å—Ç–∞")
                    continue
                
                # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
                sqlite_cursor.execute(fPRAGMA table_info({table}))           columns = sqlite_cursor.fetchall()
                column_names = [col[1] for col in columns]
                
                # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º SQL –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
                placeholders = , .join([%s* len(column_names))
                columns_str = , .join([f'`{col}`' for col in column_names])
                
                insert_sql = f"INSERT INTO `{table}` ({columns_str}) VALUES ({placeholders})"
                
                # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ MySQL
                for row in rows:
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
                    processed_row = []
                    for i, value in enumerate(row):
                        if isinstance(value, datetime):
                            value = value.isoformat()
                        elif value is None:
                            value = None
                        processed_row.append(value)
                    
                    mysql_cursor.execute(insert_sql, processed_row)
                
                mysql_conn.commit()
                print(f"   ‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ[object Object]len(rows)} –∑–∞–ø–∏—Å–µ–π")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã {table}: {e})          continue
        
        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        sqlite_conn.close()
        mysql_conn.close()
        
        returntrue       
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def create_mysql_tables():
    –°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –≤ MySQL 
    mysql_config =[object Object]
        host': 'localhost,
    user':your_username',
       password':your_password',
   database': accounting_system',
        charset': 'utf8mb4'
    }
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL
        mysql_conn = pymysql.connect(**mysql_config)
        mysql_cursor = mysql_conn.cursor()
        
        # –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
        with open('mysql_schema.sql,r, encoding='utf-8') as f:
            sql_content = f.read()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∫–æ–º–∞–Ω–¥—ã
        for statement in sql_content.split(';'):
            statement = statement.strip()
            if statement:
                mysql_cursor.execute(statement)
        
        mysql_conn.commit()
        mysql_conn.close()
        
        print(‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        returntrue       
    except Exception as e:
        print(f‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü: {e}")
        return False

if __name__ == "__main__":
    print(üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    if create_mysql_tables():
        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        if migrate_sqlite_to_mysql():
            print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(üìã–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
            print(1.–û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å MySQL")
            print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
            print(3.–£–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–π SQLite —Ñ–∞–π–ª –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏")
        else:
            print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
    else:
        print("\n‚ùå –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!") 