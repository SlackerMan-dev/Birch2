"""update salary settings to profit based

Revision ID: update_salary_settings_profit_based
Revises: add_shift_date_range_fields
Create Date: 2025-01-27 14:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'update_salary_settings_profit_based'
down_revision: Union[str, Sequence[str], None] = 'add_shift_date_range_fields'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('salary_settings', sa.Column('min_daily_profit', sa.Float(), nullable=False, server_default='100.0'))
    op.add_column('salary_settings', sa.Column('bonus_profit_threshold', sa.Float(), nullable=False, server_default='150.0'))
    op.drop_column('salary_settings', 'min_requests_per_day')
    op.drop_column('salary_settings', 'bonus_requests_threshold')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('salary_settings', sa.Column('bonus_requests_threshold', sa.INTEGER(), nullable=False, server_default='70'))
    op.add_column('salary_settings', sa.Column('min_requests_per_day', sa.INTEGER(), nullable=False, server_default='50'))
    op.drop_column('salary_settings', 'bonus_profit_threshold')
    op.drop_column('salary_settings', 'min_daily_profit')
    # ### end Alembic commands ### 